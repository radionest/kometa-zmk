#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

/ {
};

/ {
    behaviors {
        hr: hr {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };

        copy: copy {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY";
            #binding-cells = <0>;
            bindings = <&kp C>, <&kp K_COPY>;
        };

        paste: paste {
            compatible = "zmk,behavior-tap-dance";
            label = "PASTE";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp INSERT>;
        };

        SYM_or_tap: SYM_or_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "SYM_OR_TAP";
            bindings = <&change_lang_and_goto_SYM>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        ESC_or_TILDA: ESC_or_TILDA {
            compatible = "zmk,behavior-mod-morph";
            label = "ESC_OR_TILDA";
            bindings = <&kp ESC>, <&kp LS(GRAVE)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        ALT_if_CTRL_else_TAB: ALT_if_CTRL_else_TAB {
            compatible = "zmk,behavior-mod-morph";
            label = "ALT_IF_CTRL_ELSE_TAB";
            bindings = <&kp TAB>, <&kp LEFT_ALT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
        };
    };

    macros {
        change_lang_and_goto_SYM: change_lang_and_goto_SYM {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "CHANGE_LANG_AND_GOTO_SYM";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        RU {
            bindings = <
&ALT_if_CTRL_else_TAB  &lt 5 Q  &kp W           &kp E        &kp R            &kp T                    &kp Y      &kp U            &kp I        &kp O            &kp P     &kp RIGHT_BRACKET
&ESC_or_TILDA          &lt 2 A  &hr S LEFT_ALT  &hr D LCTRL  &hr F LEFT_GUI   &kp G                    &kp H      &hr J RIGHT_WIN  &hr K RCTRL  &hr L RIGHT_ALT  &kp SEMI  &kp SQT
&kp LEFT_GUI           &lt 5 Z  &kp X           &copy        &paste           &kp B                    &kp N      &kp M            &kp COMMA    &kp DOT          &kp FSLH  &kp RG(SPACE)
                                                &sk LSHFT    &mt LCTRL ENTER  &SYM_or_tap 0 BACKSPACE  &lt 7 ESC  &mt RSHFT BSPC   &lt 8 DEL
            >;
        };

        EN {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SYM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        F_KEY {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        lower_layer {
            bindings = <
&none  &none      &kp NUMBER_3           &kp NUMBER_2         &kp N1                 &kp ASTERISK   &none   &kp EXCLAMATION       &kp AT_SIGN           &kp HASH               &none  &none
&none  &kp EQUAL  &hr NUMBER_6 LEFT_ALT  &hr N5 LEFT_CONTROL  &hr NUMBER_4 LEFT_GUI  &kp KP_DIVIDE  &none   &hr DOLLAR RIGHT_GUI  &hr PERCENT RCTRL     &hr CARET RIGHT_ALT    &none  &none
&none  &kp MINUS  &kp N9                 &kp N8               &kp N7                 &kp N0         &none   &kp AMPERSAND         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none  &none
                                         &lt 9 TAB            &trans                 &trans         &trans  &trans                &lt 9 DEL
            >;
        };

        raise_layer {
            bindings = <
&none  &kp F1  &kp F2   &kp F3   &kp F4   &none      &none      &none     &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &none            &none
&none  &kp F5  &kp F6   &kp F7   &kp F8   &none      &none      &kp LEFT  &kp DOWN              &kp UP           &kp RIGHT_ARROW  &none
&none  &kp F9  &kp F10  &kp F11  &kp F12  &none      &none      &none     &kp C_BRIGHTNESS_DEC  &kp C_BRI_UP     &none            &none
                        &trans   &trans   &lt 9 RET  &lt 9 ESC  &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&none           &none       &out OUT_TOG  &soft_off     &none  &none        &none           &soft_off  &out OUT_TOG  &bootloader   &none         &bootloader
&bt BT_CLR_ALL  &bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &none  &kp K_POWER  &kp K_POWER     &none      &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none           &none       &none         &none         &none  &none        &studio_unlock  &none      &none         &none         &none         &none
                                          &trans        &none  &trans       &trans          &none      &trans
            >;
        };
    };
};
